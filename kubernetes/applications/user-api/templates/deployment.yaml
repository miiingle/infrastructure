apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-api
  labels:
    app: miiingle
    {{- include "user-api.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: miiingle
  template:
    metadata:
      labels:
        app: miiingle
    spec:
      containers:
        - name: application
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: Always
          env:
            - name: JAVA_OPTIONS
              value: -Xmx512m
            - name: LOGGING_LEVEL_ROOT
              value: DEBUG
            - name: CLIENT_EMAIL
              value: logging
            - name: DATASOURCES_DEFAULT_URL
              valueFrom:
                secretKeyRef:
                  key: rds_url
                  name: {{ .Values.datasource.secretName }}
            - name: DATASOURCES_DEFAULT_USERNAME
              valueFrom:
                secretKeyRef:
                  key: rds_username
                  name: {{ .Values.datasource.secretName }}
            - name: DATASOURCES_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: rds_password
                  name: {{ .Values.datasource.secretName }}
            - name: TRACING_ZIPKIN_HTTP_URL
              value: "http://zipkin-service.default:9411"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            requests:
              memory: "1024Mi"
              cpu: "1000m"
            limits:
              memory: "1024Mi"
              cpu: "1000m"
          livenessProbe:
            failureThreshold: 6
            successThreshold: 1
            periodSeconds: 30
            timeoutSeconds: 30
            httpGet:
              path: /health
              port: 8080
          readinessProbe:
            failureThreshold: 1
            successThreshold: 1
            periodSeconds: 10
            timeoutSeconds: 5
            httpGet:
              path: /health
              port: 8080