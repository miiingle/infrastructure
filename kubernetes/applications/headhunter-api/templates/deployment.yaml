apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "headhunter-api.fullname" . }}
  labels:
    {{- include "headhunter-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "headhunter-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "headhunter-api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "headhunter-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SPRING_ELASTICSEARCH_REST_URIS
              value: "https://{{ .Values.config.es.endpoint }}:443"
            - name: SPRING_DATA_ELASTICSEARCH_CLIENT_REACTIVE_USE_SSL
              value: "true"
            - name: SPRING_DATA_ELASTICSEARCH_CLIENT_REACTIVE_ENDPOINTS
              value: "{{ .Values.config.es.endpoint }}:443"
            - name: SPRING_REDIS_HOST
              value: "{{ .Values.config.redis.host }}"
            - name: SPRING_REDIS_PORT
              value: "{{ .Values.config.redis.port }}"
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://{{ .Values.config.rds.host }}:{{ .Values.config.rds.port }}/{{ .Values.config.rds.database }}?currentSchema={{ .Values.config.rds.schema }}&ssl=true&sslmode=require"
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ .Values.config.rds.username }}
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.config.rds.passwordSecretKey }}
                  name: {{ .Values.config.rds.passwordSecretName }}
            - name: SPRING_R2DBC_URL
              value: "r2dbc:postgresql://{{ .Values.config.rds.host }}:{{ .Values.config.rds.port }}/{{ .Values.config.rds.database }}?currentSchema={{ .Values.config.rds.schema }}&ssl=true&sslmode=require"
            - name: SPRING_R2DBC_PROPERTIES_SSL
              value: "true"
            - name: SPRING_R2DBC_USERNAME
              value: {{ .Values.config.rds.username }}
            - name: SPRING_R2DBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.config.rds.passwordSecretKey }}
                  name: {{ .Values.config.rds.passwordSecretName }}
            - name: SPRING_ZIPKIN_BASE_URL
              value: "http://zipkin-service.default:9411"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
